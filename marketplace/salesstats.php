<?php
/* Copyright (C) 2001-2019 Rodolphe Quiedeville <rodolphe@quiedeville.org>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/**
 *	\file       marketplace/salesstats.php
 *	\ingroup    prestashopget
 *	\brief      Sales stats page of marketplace
 */

// Load Dolibarr environment
$res = 0;
// Try main.inc.php into web root known defined into CONTEXT_DOCUMENT_ROOT (not always defined)
if (!$res && !empty($_SERVER["CONTEXT_DOCUMENT_ROOT"])) {
	$res = @include $_SERVER["CONTEXT_DOCUMENT_ROOT"] . "/main.inc.php";
}
// Try main.inc.php into web root detected using web root calculated from SCRIPT_FILENAME
$tmp = empty($_SERVER['SCRIPT_FILENAME']) ? '' : $_SERVER['SCRIPT_FILENAME'];
$tmp2 = realpath(__FILE__);
$i = strlen($tmp) - 1;
$j = strlen($tmp2) - 1;
while ($i > 0 && $j > 0 && isset($tmp[$i]) && isset($tmp2[$j]) && $tmp[$i] == $tmp2[$j]) {
	$i--;
	$j--;
}
if (!$res && $i > 0 && file_exists(substr($tmp, 0, ($i + 1)) . "/main.inc.php")) {
	$res = @include substr($tmp, 0, ($i + 1)) . "/main.inc.php";
}
if (!$res && $i > 0 && file_exists(dirname(substr($tmp, 0, ($i + 1))) . "/main.inc.php")) {
	$res = @include dirname(substr($tmp, 0, ($i + 1))) . "/main.inc.php";
}
// Try main.inc.php using relative path
if (!$res && file_exists("../main.inc.php")) {
	$res = @include "../main.inc.php";
}
if (!$res && file_exists("../../main.inc.php")) {
	$res = @include "../../main.inc.php";
}
if (!$res && file_exists("../../../main.inc.php")) {
	$res = @include "../../../main.inc.php";
}
if (!$res) {
	die("Include of main fails");
}

require_once DOL_DOCUMENT_ROOT . '/core/class/html.formfile.class.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/company.lib.php';
require_once DOL_DOCUMENT_ROOT . '/core/lib/date.lib.php';

// Load translation files required by the page
$langs->loadLangs(array('bills', 'companies', 'other', 'marketplace@marketplace'));

$action     = GETPOST('action', 'aZ09') ? GETPOST('action', 'aZ09') : 'view';
$massaction = GETPOST('massaction', 'alpha'); // The bulk action (combo box choice into lists)
$show_files = GETPOST('show_files', 'int'); // Show files area generated by bulk actions ?
$confirm    = GETPOST('confirm', 'alpha'); // Result of a confirmation
$cancel     = GETPOST('cancel', 'alpha');	// We click on a Cancel button
$toselect   = GETPOST('toselect', 'array'); // Array of ids of elements selected into a list
$contextpage = GETPOST('contextpage', 'aZ') ? GETPOST('contextpage', 'aZ') : 'myobjectlist'; // To manage different context of search
$backtopage = GETPOST('backtopage', 'alpha'); // Go back to a dedicated page
$optioncss  = GETPOST('optioncss', 'aZ'); // Option for the css output (always '' except when 'print')

$mode = GETPOST('mode', 'alpha');

$search_orderid = GETPOST('search_orderid', 'alpha');
$search_orderlineid = GETPOST('search_orderlineid', 'alpha');
$search_country = GETPOST('search_country', 'aZ09');
$search_email = GETPOST('search_email', 'alpha');
$search_customer = GETPOST('search_customer', 'alpha');
$search_fromday = GETPOST('search_fromday', 'int');
$search_frommonth = GETPOST('search_frommonth', 'int');
$search_fromyear = GETPOST('search_fromyear', 'int');
$search_today = GETPOST('search_today', 'int');
$search_tomonth = GETPOST('search_tomonth', 'int');
$search_toyear = GETPOST('search_toyear', 'int');
$search_from = dol_mktime(0, 0, 0, GETPOST('search_frommonth', 'int'), GETPOST('search_fromday', 'int'), GETPOST('search_fromyear', 'int'));
$search_to = dol_mktime(0, 0, 0, GETPOST('search_tomonth', 'int'), GETPOST('search_today', 'int'), GETPOST('search_toyear', 'int'));
$search_paymentmode = GETPOST('search_paymentmode', 'alpha');
$search_vatrate = GETPOST('search_vatrate', 'alpha');

// Load variable for pagination
$limit = GETPOST('limit', 'int') ? GETPOST('limit', 'int') : $conf->liste_limit;
if ($mode == 'groupbyzoneandvatrate') $limit = 0;
$sortfield = GETPOST('sortfield', 'aZ09comma');
$sortorder = GETPOST('sortorder', 'aZ09comma');
$page = GETPOSTISSET('pageplusone') ? (GETPOST('pageplusone') - 1) : GETPOST("page", 'int');
if (empty($page) || $page == -1 || GETPOST('button_search', 'alpha') || GETPOST('button_removefilter', 'alpha') || (empty($toselect) && $massaction === '0')) {
	$page = 0;
}     // If $page is not defined, or '' or -1 or if we click on clear filters or if we select empty mass action
$offset = $limit * $page;
$pageprev = $page - 1;
$pagenext = $page + 1;
if ($mode != 'groupbycountryandvatrate') {
	if (! $sortfield) $sortfield = "d.rowid";
	if (! $sortorder) $sortorder = "DESC";
} else {
	if (! $sortfield) $sortfield = "sc.code, cp.libelle";
	if (! $sortorder) $sortorder = "ASC";
}
// Securite acces client
if (! $user->hasRight('commande', 'read')) accessforbidden();
$socid = GETPOST('socid', 'int');
if (isset($user->societe_id) && $user->societe_id > 0) {
	$action = '';
	$socid = $user->societe_id;
}

$max = 5;
$now = dol_now();

$product_id = GETPOST('product_id', 'int');

$arraylistofproducts = array();


/*
 * Actions
 */

// None

// Purge search criteria
if (GETPOST('button_removefilter_x', 'alpha') || GETPOST('button_removefilter.x', 'alpha') || GETPOST('button_removefilter', 'alpha')) { // All tests are required to be compatible with all browsers
	$search_orderid = '';
	$search_orderlineid = '';
	$search_customer = '';
	$search_email = '';
	$search_country = '';
	$search_fromday = '';
	$search_frommonth = '';
	$search_fromyear = '';
	$search_from = '';
	$search_today = '';
	$search_tomonth = '';
	$search_toyear = '';
	$search_to = '';
	$search_paymentmode = '';
	$search_vatrate = '';
	$toselect = '';
	$search_array_options = array();
}



/*
 * View
 */

$form = new Form($db);
$formfile = new FormFile($db);

$now = dol_now();

$help_url = '';
$title = $langs->trans("ListOfSalesMarketplace");

if ($mode == 'groupbycountryandvatrate') {
	$title .= ' - ' . $langs->trans("GroupByCountryAndVatRate");
}

if ($mode == 'groupbyzoneandvatrate') {
	$title .= ' - ' . $langs->trans("GroupByZoneAndVatRate");
}

// Build SQL query for sales stats
$sql = "SELECT ";

// Add customer and order details depending on the mode
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') {
    $sql .= "
        d.rowid AS id_order_detail,
        sp.rowid AS socpeople_id,
        sp.ref_ext,
        s.rowid AS id_customer,
        sp.email,
        sp.lastname,
        sp.firstname,
        sp.datec AS cust_date_add,
        sp.datec AS cust_date_upd,
        d.tva_tx AS vat_number,
        d.subprice AS product_price,
        d.fk_product AS product_id,
        d.total_ht AS total_paid_tax_excl,
        d.total_ttc AS total_paid_tax_incl,
        c.date_commande AS order_date_add,
        d.remise_percent AS reduction_percent,
		COALESCE(sr.amount_ht, 0) AS reduction_amount,
        d.qty AS product_quantity,
        COALESCE(refund_data.product_quantity_refunded, 0) AS product_quantity_refunded,
        c.rowid AS id_order,
        c.date_commande AS date_add,
        c.date_valid AS date_valid,
			CASE 
			WHEN DATEDIFF(NOW(), c.date_commande) > 30 THEN 1 
			ELSE 0 
		END AS valid,
    ";
}

// Add module, tax, and country details
$sql .= "
    cp.libelle AS module,
    d.tva_tx AS tax_rate,
    sc.code AS iso_code,
";

// Calculations for validated quantities and amounts
$sql .= "   
    SUM(GREATEST(0, (CAST(d.qty AS SIGNED) - COALESCE(refund_data.product_quantity_refunded, 0)))) AS qtyvalidated,
    SUM(CASE WHEN (CAST(d.qty AS SIGNED) - COALESCE(refund_data.product_quantity_refunded, 0)) > 0 THEN d.total_ht ELSE 0 END) AS amountvalidatedht,
    SUM(CASE WHEN (CAST(d.qty AS SIGNED) - COALESCE(refund_data.product_quantity_refunded, 0)) > 0 THEN d.total_ttc ELSE 0 END) AS amountvalidatedttc,
    SUM(d.total_ht) AS total_price_tax_excl,
    SUM(d.total_ttc) AS total_price_tax_incl,
";

// Product amounts with discounts
$sql .= "
    SUM(ROUND(d.subprice, 5)) AS prod_amount_ht,
    SUM(ROUND((d.subprice - COALESCE(sr.amount_ht, 0)) * (100 - d.remise_percent) / 100, 5)) AS prod_amount_ht_with_discount_abs_and_percent,
    SUM(ROUND(d.subprice * (100 + d.tva_tx) / 100, 2)) AS prod_amount_ttc
";

// Main table and joins for order, customer, and product information
$sql .= "
    FROM " . MAIN_DB_PREFIX . "commande AS c
    LEFT JOIN " . MAIN_DB_PREFIX . "commandedet AS d ON c.rowid = d.fk_commande
    LEFT JOIN " . MAIN_DB_PREFIX . "societe_remise_except AS sr ON sr.rowid = d.fk_remise_except
    LEFT JOIN " . MAIN_DB_PREFIX . "product AS p ON p.rowid = d.fk_product
    LEFT JOIN " . MAIN_DB_PREFIX . "societe AS s ON s.rowid = c.fk_soc
    LEFT JOIN " . MAIN_DB_PREFIX . "societe_account AS sa ON s.rowid = sa.fk_soc AND sa.fk_website = ".getDolGlobalString("MARKETPLACE_WEBSITE_ID") ."
    LEFT JOIN " . MAIN_DB_PREFIX . "socpeople AS sp ON sp.fk_soc = s.rowid AND sp.ref_ext = sa.rowid
    LEFT JOIN " . MAIN_DB_PREFIX . "c_country AS sc ON sp.fk_pays = sc.rowid
";

// Join with element_element to link orders to invoice and credit invoice
$sql .= "LEFT JOIN " . MAIN_DB_PREFIX . "element_element AS ee ON ee.fk_source = c.rowid AND ee.sourcetype = 'commande' AND ee.targettype = 'facture' ";

// Join with credit invoices
$sql .= "LEFT JOIN " . MAIN_DB_PREFIX . "facture AS f_credit ON f_credit.rowid = ee.fk_target AND f_credit.type = 2 ";

// Join with orders to get payment mode from linked invoices
$sql .= "LEFT JOIN " . MAIN_DB_PREFIX . "facture AS f_order ON f_order.rowid = ee.fk_target AND f_order.type = 0  ";

// Subquery to calculate refunded quantities for each product in commandedet
$sql .= "
    LEFT JOIN (
        SELECT 
			f_credit_source.fk_source,
			fad.fk_product, 
			SUM(fad.qty) AS product_quantity_refunded 
		FROM 
			" . MAIN_DB_PREFIX . "facturedet AS fad
		INNER JOIN 
			" . MAIN_DB_PREFIX . "element_element AS f_credit_source 
			ON f_credit_source.fk_target = fad.fk_facture
			AND f_credit_source.sourcetype = 'commande'
			AND f_credit_source.targettype = 'facture'
		LEFT JOIN 
			" . MAIN_DB_PREFIX . "facture as facture_credit_note ON facture_credit_note.rowid = f_credit_source.fk_target
		WHERE 
			fad.fk_facture = f_credit_source.fk_target
			AND facture_credit_note.type = 2
		GROUP BY fad.fk_product
    ) AS refund_data ON refund_data.fk_product = d.fk_product AND refund_data.fk_source = c.rowid
";

// Additional joins for payment and module information
$sql .= "
    LEFT JOIN " . MAIN_DB_PREFIX . "paiement_facture AS pf ON pf.fk_facture = f_order.rowid
    LEFT JOIN " . MAIN_DB_PREFIX . "paiement AS pyt ON pf.fk_paiement = pyt.rowid
    LEFT JOIN " . MAIN_DB_PREFIX . "c_paiement AS cp ON cp.id = 
			CASE 
				WHEN pyt.fk_paiement IS NOT NULL THEN pyt.fk_paiement 
				ELSE c.fk_mode_reglement 
			END
";

// Filtering conditions for valid orders
$sql .= "
    WHERE d.total_ht != 0 
    AND c.fk_statut IN (1, 3)
    AND (c.facture = 1 OR c.ref_ext IS NOT NULL)
	AND (f_order.type = 0 OR f_credit.type IS NULL)
    AND c.module_source = 'marketplace'
";

// Additional filtering conditions
if ($product_id > 0) $sql .= " AND d.fk_product = " . (int) $product_id;
if ($search_orderid) $sql .= natural_search("c.rowid", $search_orderid);
if ($search_customer) $sql .= natural_search(array('sp.lastname', 'sp.firstname'), $search_customer);
if ($search_email) $sql .= natural_search('sp.email', $search_email);
if ($search_country) $sql .= natural_search('sc.code', $search_country);
if ($search_from) $sql .= " AND c.date_commande >= '" . $db->idate($search_from) . "'";
if ($search_to) $sql .= " AND c.date_commande <= '" . $db->idate($search_to + 24 * 3600 - 1) . "'";
if ($search_paymentmode) $sql .= natural_search('cp.libelle', $search_paymentmode);
if ($search_vatrate) $sql .= natural_search('d.tva_tx', $search_vatrate, 1);

// Grouping by key fields to avoid duplicates
if ($mode == 'groupbyzoneandvatrate' || $mode == 'groupbycountryandvatrate') {
	$sql .= " AND DATEDIFF(NOW(), c.date_commande) > 30 ";
	$sql .= " GROUP BY cp.libelle, d.tva_tx, sc.code";
} else {
	$sql .= "
		GROUP BY 
			d.rowid, sp.email, sp.lastname, sp.firstname, sp.datec, 
			d.tva_tx, d.subprice, d.fk_product, d.total_ht, d.total_ttc, 
			c.date_commande, d.remise_percent, sr.amount_ht, d.qty, 
			c.rowid, c.date_commande, c.date_valid, cp.libelle, sc.code_iso
	";
}

$sql .= $db->order($sortfield, $sortorder);
//print $sql;

// Count total nb of records
$nbtotalofrecords = '';
if (!getDolGlobalInt('MAIN_DISABLE_FULL_SCANLIST')) {
	$resql = $db->query($sql);
	$nbtotalofrecords = $db->num_rows($resql);
	if (($page * $limit) > $nbtotalofrecords) {	// if total of record found is smaller than page * limit, goto and load page 0
		$page = 0;
		$offset = 0;
	}
}
// if total of record found is smaller than limit, no need to do paging and to restart another select with limits set.
if (is_numeric($nbtotalofrecords) && ($limit > $nbtotalofrecords || empty($limit))) {
	$num = $nbtotalofrecords;
} else {
	if ($limit) $sql .= $db->plimit($limit + 1, $offset);

	$resql = $db->query($sql);
	if (! $resql) {
		dol_print_error($db);
		exit;
	}

	$num = $db->num_rows($resql);
}

$subresult = $db->query($sql);

$labelbyzone = $langs->trans("Country" . $mysoc->country_code) . ', ' . $langs->trans("RestOfEurope") . ', ' . $langs->trans("OutOfEurope");

// Output page
// --------------------------------------------------------------------

llxHeader("", $langs->trans("MarketplaceArea"), '', '', 0, 0, '', '', '', 'mod-marketplace page-index');

print load_fiche_titre($langs->trans("MarketplaceArea"), '', 'fa-store');

$h = 0;
$head = array();

$head[$h][0] = DOL_URL_ROOT.'/custom/marketplace/marketplaceindex.php';
$head[$h][1] = $langs->trans("invoicesStatsMarketplace");
$head[$h][2] = 'invoicesStatsMarketplace';
$h++;

$head[$h][0] = DOL_URL_ROOT.'/custom/marketplace/customerstats.php';
$head[$h][1] = $langs->trans("customersStatsMarketplace");
$head[$h][2] = 'customersStatsMarketplace';
$h++;

$head[$h][0] = DOL_URL_ROOT.'/custom/marketplace/productstats.php';
$head[$h][1] = $langs->trans("productsStatsMarketplace");
$head[$h][2] = 'productsStatsMarketplace';
$h++;

$head[$h][0] = DOL_URL_ROOT.'/custom/marketplace/salesstats.php';
$head[$h][1] = $langs->trans("ListOfSalesMarketplace");
$head[$h][2] = 'ListOfSalesMarketplace';
$h++;


print dol_get_fiche_head($head, 'ListOfSalesMarketplace', '', -1);

$param = '';
if (! empty($contextpage) && $contextpage != $_SERVER["PHP_SELF"]) $param .= '&contextpage=' . urlencode($contextpage);
if ($limit > 0 && $limit != $conf->liste_limit) $param .= '&limit=' . urlencode($limit);
if ($optioncss != '')    $param .= '&optioncss=' . urlencode($optioncss);
if ($search_orderid)     $param .= '&search_orderid=' . urlencode($search_orderid);
if ($search_orderlineid)     $param .= '&search_orderid=' . urlencode($search_orderlineid);
if ($search_customer)    $param .= '&search_customer=' . urlencode($search_customer);
if ($search_email)       $param .= '&search_email=' . urlencode($search_email);
if ($search_country)     $param .= '&search_country=' . urlencode($search_country);
if ($search_fromday)     $param .= '&search_fromday=' . urlencode($search_fromday);
if ($search_frommonth)   $param .= '&search_frommonth=' . urlencode($search_frommonth);
if ($search_fromyear)    $param .= '&search_fromyear=' . urlencode($search_fromyear);
if ($search_today)       $param .= '&search_today=' . urlencode($search_today);
if ($search_tomonth)     $param .= '&search_tomonth=' . urlencode($search_tomonth);
if ($search_toyear)      $param .= '&search_toyear=' . urlencode($search_toyear);
if ($search_paymentmode) $param .= '&search_paymentmode=' . urlencode($search_paymentmode);
if ($search_vatrate)     $param .= '&search_vatrate=' . urlencode($search_vatrate);

print '<form method="POST" id="searchFormList" action="' . $_SERVER["PHP_SELF"] . '">';
if ($optioncss != '') print '<input type="hidden" name="optioncss" value="' . $optioncss . '">';
print '<input type="hidden" name="token" value="' . newToken() . '">';
print '<input type="hidden" name="formfilteraction" id="formfilteraction" value="list">';
print '<input type="hidden" name="action" value="list">';
print '<input type="hidden" name="sortfield" value="' . $sortfield . '">';
print '<input type="hidden" name="sortorder" value="' . $sortorder . '">';
print '<input type="hidden" name="contextpage" value="' . $contextpage . '">';
print '<input type="hidden" name="mode" value="' . $mode . '">';
if ($mode == 'groupbyzoneandvatrate') {
	print '<input type="hidden" name="page" value="' . $page . '">';
}

if ($mode == 'groupbyzoneandvatrate') {
	$newcardbutton = '<a href="' . $_SERVER["PHP_SELF"] . '?' . $param . '&mode=list" class="eee">' . $langs->trans("FullList") . '</a>';
	$newcardbutton .= ' - <a href="' . $_SERVER["PHP_SELF"] . '?' . $param . '&mode=groupbycountryandvatrate" class="eee">' . $langs->trans("GroupByCountryAndVatRate") . '</a>';
} elseif ($mode == 'groupbycountryandvatrate') {
	$newcardbutton = '<a href="' . $_SERVER["PHP_SELF"] . '?' . $param . '&mode=list" class="eee">' . $langs->trans("FullList") . '</a>';
	$newcardbutton .= ' - <a href="' . $_SERVER["PHP_SELF"] . '?' . $param . '&mode=groupbyzoneandvatrate&sortfield=d.tva_tx" class="eee" title="' . $labelbyzone . '">' . $langs->trans("GroupByZoneAndVatRate") . '</a>';
} else {
	$newcardbutton = '<a href="' . $_SERVER["PHP_SELF"] . '?' . $param . '&mode=groupbycountryandvatrate" class="eee">' . $langs->trans("GroupByCountryAndVatRate") . '</a>';
	$newcardbutton .= ' - <a href="' . $_SERVER["PHP_SELF"] . '?' . $param . '&mode=groupbyzoneandvatrate&sortfield=d.tva_tx" class="eee" title="' . $labelbyzone . '">' . $langs->trans("GroupByZoneAndVatRate") . '</a>';
}
$massactionbutton = '';

if ($mode) $param .= '&mode=' . urlencode($mode);

if ($mode == 'groupbyzoneandvatrate') {
	print_barre_liste($title . ' (' . $labelbyzone . ')', $page, $_SERVER["PHP_SELF"], $param, $sortfield, $sortorder, $massactionbutton, -1 * $num, '', 'title_companies', 0, $newcardbutton, '', -1, 1, 1);
} else {
	print_barre_liste($title, $page, $_SERVER["PHP_SELF"], $param, $sortfield, $sortorder, $massactionbutton, $num, $nbtotalofrecords, 'title_companies', 0, $newcardbutton, '', $limit, 0, 0, 1);
}

$moreforfilter = '';

$parameters = array();
$reshook = $hookmanager->executeHooks('printFieldPreListTitle', $parameters, $object, $action);    // Note that $action and $object may have been modified by hook
if (empty($reshook)) $moreforfilter .= $hookmanager->resPrint;
else $moreforfilter = $hookmanager->resPrint;

if (! empty($moreforfilter)) {
	print '<div class="liste_titre liste_titre_bydiv centpercent">';
	print $moreforfilter;
	print '</div>';
}

$varpage = empty($contextpage) ? $_SERVER["PHP_SELF"] : $contextpage;
$selectedfields = '&nbsp;';
//$selectedfields=$form->multiSelectArrayWithCheckbox('selectedfields', $arrayfields, $varpage);	// This also change content of $arrayfields
//$selectedfields.=(count($arrayofmassactions) ? $form->showCheckAddButtons('checkforselect', 1) : '');

print '<div class="div-table-responsive">';		// You can use div-table-responsive-no-min if you dont need reserved height for your table
print '<table class="tagtable liste' . ($moreforfilter ? " listwithfilterbefore" : "") . '">' . "\n";


// Fields title search
// --------------------------------------------------------------------
print '<tr class="liste_titre">';
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td><input type="text" class="maxwidth50" name="search_orderid" value="' . $search_orderid . '"></td>';
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td><input type="text" class="maxwidth50" name="search_orderlineid" value="' . $search_orderlineid . '"></td>';
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td><input type="text" class="maxwidth75" name="search_customer" value="' . $search_customer . '"></td>';
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td></td>';
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td><input type="text" class="maxwidth50" name="search_email" value="' . $search_email . '"></td>';
// Country
print '<td><input type="text" class="maxwidth50" name="search_country" value="' . $search_country . '"></td>';
// VAT rate
print '<td class="right"><input type="text" class="maxwidth50" name="search_vatrate" value="' . $search_vatrate . '"></td>';
// Payment mode
print '<td><input type="text" class="maxwidth50" name="search_paymentmode" value="' . $search_paymentmode . '"></td>';
print '<td></td>';
// Date
print '<td>';
print $form->selectDate($search_from ? $search_from : -1, 'search_from');
//print '<br>';
print $form->selectDate($search_to ? $search_to : -1, 'search_to');
print '</td>';
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td></td>';
//if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td></td>';
//if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td></td>';
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td></td>';
print '<td></td>';
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td></td>';
print '<td></td>';
print '<td></td>';
print '<td></td>';
//if ($mode != 'groupbycountryandvatrate') print '<td></td>';
// Action column
print '<td class="liste_titre maxwidthsearch">';
$searchpicto = $form->showFilterButtons();
print $searchpicto;
print '</td>';
print '</tr>' . "\n";

// Fields title label
// --------------------------------------------------------------------
print '<tr class="liste_titre">';
// Action column
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('OrderID', 0, $_SERVER["PHP_SELF"], 'c.rowid', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('LineId', 0, $_SERVER["PHP_SELF"], 'd.rowid', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('Customer', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('Customer date creation', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('Customer email', 0, $_SERVER["PHP_SELF"], 'sp.email', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
print getTitleFieldOfList('Customer country', 0, $_SERVER["PHP_SELF"], 'sc.code', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
print getTitleFieldOfList('VATRate',   0, $_SERVER["PHP_SELF"], 'd.tva_tx', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch right ') . "\n";
print getTitleFieldOfList('PaymentMode', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
print getTitleFieldOfList('InEEC', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('Date sale', 0, $_SERVER["PHP_SELF"], 'c.date_commande', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
else print getTitleFieldOfList('', 0, $_SERVER["PHP_SELF"], 'c.date_commande', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('Product id', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
//if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('Product label', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ')."\n";
//if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('Product ref', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ')."\n";
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('IsValid', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
print getTitleFieldOfList('NbOfProducts',       0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ') . "\n";
if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print getTitleFieldOfList('UnitPriceHT',    0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch right ') . "\n";
print getTitleFieldOfList('TotalHTShort',  0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch right ') . "\n";
print getTitleFieldOfList('TotalVAT', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch right ') . "\n";
print getTitleFieldOfList('TotalTTCShort', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch right ') . "\n";
//if ($mode != 'groupbycountryandvatrate') print getTitleFieldOfList('Note', 0, $_SERVER["PHP_SELF"], '', '', $param, '', $sortfield, $sortorder, 'maxwidthsearch ')."\n";
// Action column
print getTitleFieldOfList($selectedfields, 0, $_SERVER["PHP_SELF"], '', '', '', '', $sortfield, $sortorder, 'center maxwidthsearch ') . "\n";
print '</tr>' . "\n";

// Loop on record
// --------------------------------------------------------------------
$prodqty = 0;
$arryofobj = array();

//$num = $db->num_rows($subresult);
$cpt = 0;
while (($obj = $db->fetch_object($subresult)) && (empty($limit) || ($cpt < min($num, $limit)))) {
	$cpt++;

	$obj->country_code = $obj->iso_code;

	$prodqty += $obj->product_quantity;

	$qtyvalidated = $obj->qtyvalidated;

	//var_dump($obj->iso_code.' '.$mysoc->country_code);
	$obj->isineec = (isInEEC($obj) ? 1 : 0);
	if ($obj->isineec) {
		$obj->ismysoccountry = ($obj->iso_code == $mysoc->country_code ? 1 : 0);
	} else {
		$obj->ismysoccountry = 0;
	}

	if ($mode == 'groupbyzoneandvatrate') {
		$tmp = new stdClass();
		$tmp->isineec = $obj->isineec;

		$keyforarray = $obj->isineec . '_' . $obj->ismysoccountry . '_' . $obj->tax_rate . '_' . $obj->module;

		//print $keyforarray.' '.$obj->qtyvalidated.'<br>';
		$tmp->qtyvalidated = $obj->qtyvalidated + $arryofobj[$keyforarray]->qtyvalidated;
		$tmp->tax_rate = $obj->tax_rate;
		$tmp->amountvalidatedht = $obj->amountvalidatedht + $arryofobj[$keyforarray]->amountvalidatedht;
		$tmp->amountvalidatedttc = $obj->amountvalidatedttc + $arryofobj[$keyforarray]->amountvalidatedttc;
		$tmp->module = $obj->module;

		$arryofobj[$keyforarray] = $tmp;
	} else {
		$arryofobj[] = $obj;
	}
}

foreach ($arryofobj as $key => $obj) {
	$qtyvalidated = $obj->qtyvalidated;

	print '<tr class="oddeven">';

	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td>' . $obj->id_order . '</td>';

	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td>' . $obj->id_order_detail . '</td>';

	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td class="tdoverflowmax100"><span title="' . dolGetFirstLastname($obj->firstname, $obj->lastname) . '">' . dolGetFirstLastname($obj->firstname, $obj->lastname) . '</span></td>';

	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td class="nowraponall">' . dol_print_date($db->jdate($obj->cust_date_add), 'dayhour') . '</td>';

	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td class="tdoverflowmax150"><span title="' . $obj->email . '">' . $obj->email . '</span></td>';

	// Country code
	print '<td class="nowraponall">';
	if ($mode == 'groupbyzoneandvatrate') {
		if (strpos($key, '1_1') === 0) print $langs->trans("Country" . $mysoc->country_code);
		elseif (strpos($key, '1_0') === 0) print $langs->trans("RestOfEurope");
		else print $langs->trans("OutOfEurope");
	} else {
		print $langs->trans("Country" . $obj->iso_code);
	}
	print '</td>';

	// Vat rate
	print '<td class="right nowraponall">' . vatrate($obj->tax_rate) . '</td>';

	// Payment mode
	print '<td>' . $obj->module . '</td>';

	// Is in EEC
	print '<td>';
	print yn($obj->isineec);
	print '</td>';

	// Date
	print '<td class="nowraponall">' . dol_print_date($db->jdate($obj->order_date_add), 'dayhour') . '</td>';

	// Product ID
	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td>' . $obj->product_id . '</td>';
	//if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td>'.$arraylistofproducts[$obj->product_id]['name'].'</td>';
	//if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td>'.$arraylistofproducts[$obj->product_id]['reference'].'</td>';

	// Valid ?
	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') print '<td>' . yn($obj->valid) . '</td>';

	// Qty validated
	print '<td>' . $qtyvalidated . '</td>';

	$amountearnedunit = (float) ($obj->prod_amount_ht - $obj->reduction_amount + 0);
	if ($obj->reduction_percent > 0) $amountearnedunit = round($amountearnedunit * (100 - $obj->reduction_percent) / 100, 5);
	$amountearnedunitsql = $obj->prod_amount_ht_with_discount_abs_and_percent;

	//$amountearned=$amountearnedunit*$subrow['product_quantity'];
	//$amountearned=$amountearnedunit*$qtyvalidated;
	//if ($subrow['id_customer'] == 9824) var_dump($amountearned);

	$totalamountunit = ($qtyvalidated > 1 ? $obj->prod_amount_ht * $qtyvalidated : $obj->prod_amount_ht);

	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') {
		if ($obj->reduction_amount > 0 || $obj->reduction_percent > 0) {
			print '<td class="right nowraponall">';
			/*print $obj->reduction_amount;
			print ' '.$obj->reduction_percent;
			print ' '.$obj->prod_amount_ht_with_discount_abs_and_percent;*/
			print ' ' . round($amountearnedunitsql, 5) . ' ';
			//print round($amountearnedunit,5);
			print ' (' . ($totalamountunit + 0) . ')';
			print '</td>';
		} else {
			print '<td class="right nowraponall">' . round($amountearnedunitsql, 5) . '</td>';
		}
	}

	// Final amount HT
	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') {
		if ($obj->amountvalidatedht > 0) {
			print '<td class="right nowraponall">';
			print price($obj->amountvalidatedht) . ' ';
			print '</td>';
		} else {
			print '<td>';
			print $langs->trans('RefundedOrCancelled');
			print '</td>';
		}
	} else {
		print '<td class="right nowraponall">';
		print price($obj->amountvalidatedht) . ' ';
		print '</td>';
	}

	// Final amount VAT
	print '<td class="right nowraponall">';
	if ($obj->amountvalidatedttc > 0 || $obj->amountvalidatedht > 0) {
		print price($obj->amountvalidatedttc - $obj->amountvalidatedht);
	} else {
		print $langs->trans('RefundedOrCancelled');
	}
	print '</td>';

	// Final amount TTC
	if ($mode != 'groupbycountryandvatrate' && $mode != 'groupbyzoneandvatrate') {
		if ($obj->amountvalidatedttc > 0) {
			print '<td class="right nowraponall">';
			print price($obj->amountvalidatedttc) . ' ';
			print '</td>';
		} else {
			print '<td>';
			print $langs->trans('RefundedOrCancelled');
			print '</td>';
		}
	} else {
		print '<td class="right nowraponall">';
		print price($obj->amountvalidatedttc) . ' ';
		print '</td>';
	}
	/*
	print '<td class="right nowraponall">';
	print price($obj->total_price_tax_incl);
	print '</td>';*/

	// Note
	//if ($mode != 'groupbycountryandvatrate') print '<td></td>';

	// Action
	print '<td></td>';

	print '</tr>';
}

print '</table>';

print '</form>';


// End of page
llxFooter();
$db->close();
